<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>it.digitalhub</groupId>
	<artifactId>dremio-rest-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>dremio-rest-server</name>
	<description>Dremio REST Server</description>
	<properties>
		<java.version>17</java.version>
		<arrow.version>13.0.0</arrow.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.arrow</groupId>
			<artifactId>flight-core</artifactId>
			<version>${arrow.version}</version>
			<exclusions>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-transport-native-unix-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-transport-native-kqueue</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-transport-native-epoll</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.arrow</groupId>
			<artifactId>flight-sql-jdbc-driver</artifactId>
			<version>${arrow.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.graalvm.buildtools</groupId>
				<artifactId>native-maven-plugin</artifactId>
				<configuration>
					<!-- imageName is used to set the name of the generated binary file -->
					<imageName>${project.artifactId}</imageName>
					<!-- mainClass is used to specify the path to the main method class -->
					<mainClass>it.digitalhub.dremiorestserver.DremioRestServerApplication</mainClass>
					<buildArgs>
						--no-fallback
					</buildArgs>
					<nativeImageArgs>
						<arg>--allow-incomplete-classpath</arg>
						<arg>--trace-class-initialization=org.slf4j.LoggerFactory</arg>
						<arg>-H:ReflectionConfigurationFiles=./agentconfig</arg>
						<!-- This flag supposedly addresses issues with class inizialization, but it seems to get ignored -->
						<arg>--initialize-at-run-time=ch.qos.logback.core.util.StatusPrinter,org.slf4j.LoggerFactory,io.netty.buffer.AbstractPooledDerivedByteBuf,io.netty.util.AbstractReferenceCounted,io.netty.buffer.PooledUnsafeDirectByteBuf,io.netty.buffer.ByteBufAllocator,io.netty.buffer.PooledByteBuf,ch.qos.logback.classic.Level,ch.qos.logback.core.status.StatusBase,io.netty.buffer.PooledByteBufAllocator,io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeDirectByteBuf,ch.qos.logback.core.util.Loader,io.netty.buffer.AbstractReferenceCountedByteBuf,io.netty.handler.ssl.PemValue,io.netty.handler.ssl.PemPrivateKey,io.netty.buffer.UnpooledUnsafeDirectByteBuf,ch.qos.logback.core.status.InfoStatus,io.netty.buffer.UnpooledDirectByteBuf,ch.qos.logback.classic.Logger,io.netty.buffer.PooledSlicedByteBuf,ch.qos.logback.core.CoreConstants</arg>
					</nativeImageArgs>
				</configuration>
			</plugin>
		</plugins>
		<extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
            </extension>
        </extensions>
	</build>

</project>
